1. Install CQ jar from scratch
2. Install service pack from package share (requires package share login)
3. From the wem.git repo run: mvn clean install
4. From the wem.git repo run: mvn clean install -P buildSetup,deploySetup
5. Restart your cq instance!!
   Your env is now ready for normal code / bundle / content / tag deploys
   Optional: you might want to stop the server and make this your freshie baseline (but remember to periodically run setup and restart to keep it up to date, probably after each sprint)
6. Install core (bundles / code): mvn clean install -P buildCore,deployCore
7. Install optional packages (tags / tests / content): see README in the wem.git root for specific maven profiles you may want

http://momo.brauchtman.net/2011/11/12/howto-install-jenkins-on-os-x-and-make-it-build-mac-stuff/( Jenkins )
http://askubuntu.com/questions/29589/chmod-ux-versus-chmod-x
sudo dscl . create /Users/jenkins
sudo dscl . create /Users/jenkins PrimaryGroupID 1
sudo dscl . create /Users/jenkins UniqueID 300
sudo dscl . create /Users/jenkins UserShell /bin/bash
sudo dscl . create /Users/jenkins home /Users/Shared/Jenkins/Home/
sudo dscl . create /Users/jenkins NFSHomeDirectory /Users/Shared/Jenkins/Home/
sudo dscl . passwd /Users/jenkins

sudo launchctl load -w /Library/LaunchDaemons/org.jenkins-ci.plist( Start )
sudo launchctl unload -w /Library/LaunchDaemons/org.jenkins-ci.plist( Stop )

git ls-remote -h ssh://bthunga@wwwin-git-sjc/git/ecm/wem.git HEAD

http://askubuntu.com/questions/29589/chmod-ux-versus-chmod-x
http://apple.stackexchange.com/questions/99298/change-users-home-directory
http://stackoverflow.com/questions/15007028/jslint-maven-plugin-doesnt-read-jssourcefolder-and-still-reads-default-value

Jenkins (Recordings)
https://cisco.webex.com/ciscosales/lsr.php?AT=pb&SP=MC&rID=74566167&rKey=510e3e3b63c76228  -- JM
http://momo.brauchtman.net/2011/11/12/howto-install-jenkins-on-os-x-and-make-it-build-mac-stuff/( Jenkins )
https://cisco.webex.com/ciscosales/lsr.php?AT=pb&SP=MC&rID=74574307&rKey=a6194b0f2ab58c84  -- GLEN

cd /Users/../wem
mvn clean install
mvn clean install -P buildSetup,deploySetup
mvn clean install -P buildCore,deployCore
mvn clean install -P buildFrameworkAssets,deployFrameworkAssets
mvn clean install -P buildTests,deployTests
mvn clean install -P buildTags,deployTags

mvn clean install -P runJasmine -D jasmine.skiptests=true jasmine:bdd
mvn clean install -P runJasmine -D jasmine.skiptests=true jasmine:bdd
mvn clean install -P runJasmine jasmine:bdd


mvn clean install
mvn clean install -P buildSetup,deploySetup -Dcrx.host=$hosturl -Dcrx.user=admin -Dcrx.password=admin
mvn clean install -P buildCore,deployCore -Dcrx.host=$hosturl -Dcrx.user=admin -Dcrx.password=admin
mvn clean install -P buildFrameworkAssets,deployFrameworkAssets -Dcrx.host=$hosturl -Dcrx.user=admin -Dcrx.password=admin
mvn clean install -P buildTests,deployTests -Dcrx.host=$hosturl -Dcrx.user=admin -Dcrx.password=admin
mvn clean install -P buildTags,deployTags -Dcrx.host=$hosturl -Dcrx.user=admin -Dcrx.password=admin

cd ../xyz
rm -rf src/views/bundles.json
curl -sL -u admin:admin "http://$hosturl:4502/system/console/bundles.json" -o src/views/bundles.json

curl -v --header "CQ-Action: Activate" --header "CQ-Handle:wemhandle,remove,all,/etc,0,a" --header "CQ-Action-Scope: ResourceOnly" --request "POST" --header  "Content-Leng://wemxweb-publish-stage3-01.cisco.com:8080/dispatcher/invalidate.cache"
curl -v --header "CQ-Action: Activate" --header "CQ-Handle:wemhandle,remove,all,/etc,0,a" --header "CQ-Action-Scope: ResourceOnly" --request "POST" --header  "Content-Length:0" "http://wemxweb-publish-stage3-01.cisco.com:8080/dispatcher/invalidate.cache"
curl -H "CQ-Action: DELETE" -H "CQ-Handle:/etc/designs" -H "CQ-Path:/etc/designs" -H "Content-Length: 0" -H "Content-Type: application/octet-stream" http://wemxweb-publish-stage3-01:8080/dispatcher/invalidate.cache

clean install -P deploySetup --fae -Dcrx.host=cqbot.cisco.com -Dcrx.port=1138



